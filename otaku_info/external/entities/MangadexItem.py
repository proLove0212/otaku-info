"""LICENSE
Copyright 2020 Hermann Krumrey <hermann@krumreyh.com>

This file is part of otaku-info.

otaku-info is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

otaku-info is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with otaku-info.  If not, see <http://www.gnu.org/licenses/>.
LICENSE"""

from typing import Dict, Any
from otaku_info.enums import ListService
from otaku_info.utils.mappings import mangadex_external_id_names, \
    list_service_id_types


class MangadexItem:
    """
    Class that models a general anilist list item
    Represents the information fetched using anilist's API
    """
    def __init__(
            self,
            mangadex_id: int,
            external_ids: Dict[ListService, str]
    ):
        """
        Initializes the MangadexItem object
        :param mangadex_id: The mangadex ID of the series
        :param external_ids: IDs for other services
        """
        self.mangadex_id = mangadex_id
        self.external_ids = external_ids

    @classmethod
    def from_json(cls, mangadex_id: int, data: Dict[str, Any]) \
            -> "MangadexItem":
        """
        Generates a MangadexItem from a dictionary generated by an API query
        :param mangadex_id: The mangadex ID
        :param data: The data to use
        :return: The generated MangadexItem
        """
        ids = {ListService.MANGADEX: str(mangadex_id)}
        links = data["manga"]["links"]
        if links is not None:
            for service, identifier in mangadex_external_id_names.items():
                if identifier in links:
                    _id = links[identifier]
                    id_type = list_service_id_types[service]
                    if id_type == int:
                        _id = "".join([x for x in _id if x.isdigit()])
                    try:
                        ids[service] = str(id_type(_id))
                    except ValueError:
                        pass

        return MangadexItem(
            mangadex_id,
            ids
        )
